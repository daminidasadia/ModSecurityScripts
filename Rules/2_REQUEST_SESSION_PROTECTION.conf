############################################
# Validates the REQUEST for session protection.
# TODO: danger score / add rule ids to the audit
############################################


# Try to detect the first access where no session ID is sent.
SecRule REQUEST_METHOD "!@streq POST" "id:200,phase:1,chain,pass,nolog,skipAfter:END_SESSION_REQUEST_RULES"
SecRule &REQUEST_COOKIES:JSESSIONID "@eq 0" 

# Checks if more than one session ID cookies were sent
SecRule &REQUEST_COOKIES:JSESSIONID "!@eq 1" "id:201,phase:1,deny,log,nolog,msg:'Invalid number of session cookies sent'"

# Validates the session
SecRule REQUEST_COOKIES:JSESSIONID "(.*)" "id:202,phase:1,t:none,nolog,pass,setsid:%{matched_var}"

# If the session is invalid we force a logout.
SecRule SESSION:VALID "!@eq 1" "id:204,phase:1,t:none,pass,redirect:'/logout',skipAfter:END_SESSION_REQUEST_RULES,msg:'Invalid session received. Sending to logout...'"

# If the session expired we force a logout.
SecRule SESSION:VALID "@eq 1" "id:205,phase:1,chain,t:none,,redirect:'/logout',msg:'Session Idle for: %{tx.session_idle} seconds.',setvar:tx.session_idle=%{time_epoch},setvar:tx.session_idle=-%{session.last_update_time}"
SecRule TX:SESSION_IDLE "@gt 300" "setvar:!session.valid"

# updates the session to renew the idle time
SecRule SESSION:VALID "@eq 1" "id:206,phase:1,chain,t:none,nolog,pass"
SecRule TX:SESSION_IDLE "@lt 300" "setvar:session.active=1"

# Checks for IP changes during the same session
SecRule SESSION:IP "!@streq %{REMOTE_ADDR}" "id:207,phase:1,block,msg:'Session hijacking Detected: Expected IP address %{SESSION.ip} but got %{REMOTE_ADDR}'"

# Checks for User-Agent changes during the same session
SecRule REQUEST_HEADERS:User-Agent "(.*)" "id:208,phase:1,chain,t:none,block,t:sha1,t:hexEncode,setvar:TX.uahash=%{matched_var},msg:'Session hijacking Detected: Expected User-Agent hash %{SESSION.uahash} but got %{TX.uahash}'"
SecRule SESSION:uahash "!@streq %{TX.uahash}"

SecMarker END_SESSION_REQUEST_RULES