
############################################
# CSRF protection and token injection
############################################

#Enables content manipulation
SecContentInjection On
SecStreamOutBodyInspection On
SecDisableBackendCompression On

# On every POST checks the CSRF token. The token is generated on 'session_initialize.lua'
SecRule REQUEST_METHOD "@streq POST" "id:500,phase:2,chain,capture,t:none,block,setvar:TX.csrf_token=%{ARGS.csrf_token},msg:'Invalid CSRF token. Expected %{session.csrf_token} but received %{ARGS.csrf_token}',tag:'custom_rule', tag:'csrf_protection', severity:2"
SecRule TX:csrf_token "!@streq %{SESSION.csrf_token}"

# On valid requests we inject the CSRF token into the forms
SecRule SESSION:VALID "@eq 1" "id:501,phase:4,chain,t:none,pass,nolog"
SecRule STREAM_OUTPUT_BODY "@rsub s/<\/form>/<input type=\"hidden\" name=\"csrf_token\" value=\"%{session.csrf_token}\"><\/form>/"