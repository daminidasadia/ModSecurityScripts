############################################
# Validates the RESPONSE for session protection.
############################################

#Enables content manipulation
SecContentInjection On
SecStreamOutBodyInspection On
SecDisableBackendCompression On

# Initializes the session when we receive a session cookie from the server
# TODO make the session cookie SameSite=strict
SecRule RESPONSE_HEADERS:/Set-Cookie2?/ "^(?i:JSESSIONID)=(.*?);" "id:301,phase:3,t:none,pass,nolog,capture,setsid:%{TX.1}"

# Populate the new session with the required data for the validations
SecRule SESSION:IS_NEW "@eq 1" "id:300,phase:3,chain,t:none,pass,nolog"
SecRuleScript session_initialize.lua

# After the logout we make some server/client side redirects to regenerate the session without affecting the user experience
SecRule REQUEST_URI "/logout" "id:303,phase:3,nolog,setvar:!session.user,redirect:'/?l'"
SecRule REQUEST_URI "^(\/\?l)$" "id:304,phase:4,chain,pass,nolog"
SecRule STREAM_OUTPUT_BODY "@rsub s/<head>/<head><META HTTP-EQUIV=\"Refresh\" CONTENT=\"0;URL=\/\">/"